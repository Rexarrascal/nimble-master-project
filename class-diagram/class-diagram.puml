@startuml "Class Diagram"

' ref<https://plantuml.com/class-diagram>

' +`lar public -`ler private

' COMPOSTIONDA (*--), ikili iliskiler goze alinmalidir.
' Ornegin bir corporate olmadan bir event olmuyorsa bu COMPOSITION`dir.
' Eventin corporateden bagimsiz bir life cycle`i olamaz.

' AGGREGATION (o--) ile composition arasinda temel farklar vardi. COMPOSITION daha strictir.
' AGGREGATION icin bir ornek vermek gerekirse, araba ve lastik ornegi verilebilir.
' Lastigin arabadan bagimsiz bir life cycle i vardir ve arabadan bagimsiz da bir islevi vardir.

' ASSOCIATION ustteki ikisi arasindaki en zayif baglayiciligi olandir. 

' Aslinda bir domaindeki tum aktiviteler diger domani 
' etkiliyorsa bunlarin ayri bir domain olmaamasi gerekir. Note: Advanced Konu

class User <<Entity>> {
  + ID: Integer
  + name: String
  + phone: String
  + email: String
} 

class Customer <<Entity>> { 
    +age: String
    +orders = []
    +order()
    +rate()
    +comment()
       
}

class Pharmacy <<Entity>> {
    +orders = []
    +customers = []
    +addnewdrug()
    +dropadrug()
}

class Wall <<Entity>> {
  + text: String
  + user: User
  + comments: [Wall]    
}

class Location <<Entity>> {
    + coords : Number []
}

class Drug <<Entity>> {
    +ID: Integer
    +name: String
}

class Druglist <<Entity>> {

}

class Order {
    orderID: Integer
}

class OrderCart {
    orderListID: Integer
}

class Status {
    cancel()
}

class Inventory {

}


Customer --up|> User
Pharmacy --up|> User
Pharmacy "1" *-- "1" Location
Pharmacy "1" *-- "0..n" Druglist
Pharmacy "1" *-- "1" Inventory
Inventory -- Drug
Druglist -- Drug
User "0..n" *-- "1" Wall
Customer "1" *-- "0..n" OrderCart
Customer "1" *-- "0..n" Order
(Customer, Order) .. Status
OrderCart *--  Order



@enduml